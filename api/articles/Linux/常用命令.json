{"title":"Linux基础","uid":"144f0b4d9b9f80ea377106e9c6a54a45","slug":"Linux/常用命令","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.023Z","comments":true,"path":"api/articles/Linux/常用命令.json","keywords":null,"cover":null,"content":"<p><a href=\"https://mp.weixin.qq.com/s/LxuwP-f-PivzmaKeN5bcZA\">参考</a></p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>shutdown -h now</code></td>\n<td>关机</td>\n</tr>\n<tr>\n<td><code>shutdown -r now</code></td>\n<td>重启</td>\n</tr>\n<tr>\n<td><code>uname -a</code></td>\n<td>查看系统内核信息</td>\n</tr>\n<tr>\n<td>cat &#x2F;proc&#x2F;version</td>\n<td>查看系统内核版本</td>\n</tr>\n<tr>\n<td>env</td>\n<td>查看当前用户的环境变量</td>\n</tr>\n<tr>\n<td>cat &#x2F;proc&#x2F;cpuinfo</td>\n<td>查看系统内存信息</td>\n</tr>\n<tr>\n<td>cat &#x2F;proc&#x2F;cpuinfo | grep name | cut -f2 -d: | uniq -c</td>\n<td>查看有几个逻辑CPU及型号</td>\n</tr>\n<tr>\n<td>cat &#x2F;proc&#x2F;cpuinfo | grep physical | uniq -c</td>\n<td>查看有几颗CPU，每颗分别是几核</td>\n</tr>\n<tr>\n<td>getconf LONG_BIT</td>\n<td>查看当前CPU运行在32bit</td>\n</tr>\n<tr>\n<td>cat &#x2F;proc&#x2F;cpuinfo | grep flags | grep ‘ lm ’ | wc -l</td>\n<td>结果大于0，说明支持64bit</td>\n</tr>\n<tr>\n<td>ln -s &#x2F;usr&#x2F;local&#x2F;jdk1.8 jdk</td>\n<td>建立软连接</td>\n</tr>\n<tr>\n<td>rpm -qa | grep 软件名</td>\n<td>查看是否通过rpm安装了该软件</td>\n</tr>\n<tr>\n<td>ssh-keygen -t rsa -C <a href=\"mailto:&#x79;&#111;&#x75;&#114;&#95;&#101;&#109;&#x61;&#x69;&#x6c;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#111;&#x6d;\">&#x79;&#111;&#x75;&#114;&#95;&#101;&#109;&#x61;&#x69;&#x6c;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#111;&#x6d;</a></td>\n<td>创建sshkey</td>\n</tr>\n<tr>\n<td>alias ll&#x3D;’ls -alF’</td>\n<td>在各个用户的.bash_profile中添加重命名配置</td>\n</tr>\n<tr>\n<td>sudo ntpdate -u ntp.api.bz</td>\n<td>同步服务器时间</td>\n</tr>\n<tr>\n<td>nohup xxx &amp;</td>\n<td>后台运行,并且有nohup.out输出</td>\n</tr>\n<tr>\n<td>nohup xxx &gt; &#x2F;dev&#x2F;null &amp;</td>\n<td>后台运行, 不输出任何日志</td>\n</tr>\n<tr>\n<td>nohup xxx &gt;out.log 2&gt;&amp;1 &amp;</td>\n<td>后台运行, 并将错误信息做标准输出到日志中</td>\n</tr>\n<tr>\n<td>pkill -kill -t [TTY]</td>\n<td>命令来完成强制活动用户退出.其中TTY表示终端名称</td>\n</tr>\n<tr>\n<td>which &lt;命令&gt;</td>\n<td>查看命令路径</td>\n</tr>\n<tr>\n<td>ulimit -n</td>\n<td>查看进程所有打开最大fd数</td>\n</tr>\n<tr>\n<td>vim &#x2F;etc&#x2F;resolv.conf</td>\n<td>配置dns</td>\n</tr>\n<tr>\n<td>nslookup google.com</td>\n<td>查看域名路由表</td>\n</tr>\n<tr>\n<td>last -n 5</td>\n<td>最近登录信息列表</td>\n</tr>\n<tr>\n<td>ifconfig em1 192.168.5.177 netmask 255.255.255.0</td>\n<td>设置固定ip</td>\n</tr>\n<tr>\n<td>ps eww -p XXXXX(进程号)</td>\n<td>查看进程内加载的环境变量</td>\n</tr>\n<tr>\n<td>ps auwxf</td>\n<td>查看进程树找到服务器进程</td>\n</tr>\n<tr>\n<td>cd &#x2F;proc&#x2F;xxx(进程号)</td>\n<td>查看进程启动路径</td>\n</tr>\n<tr>\n<td>useradd 用户名 &amp;&amp; passwd 用户名</td>\n<td>添加用户</td>\n</tr>\n<tr>\n<td>vim &#x2F;etc&#x2F;sudoers</td>\n<td>配置sudo权限</td>\n</tr>\n<tr>\n<td>ps aux | grep xxx | grep -v grep | awk ‘{print $2}’ | xargs kill -9</td>\n<td>强制关闭进程名包含xxx的所有进程</td>\n</tr>\n<tr>\n<td>:%s&#x2F;x&#x2F;y&#x2F;g</td>\n<td>normal模式下 g表示全局, x表示查找的内容, y表示替换后的内容</td>\n</tr>\n<tr>\n<td>mount</td>\n<td>查看磁盘挂载情况</td>\n</tr>\n<tr>\n<td>df</td>\n<td>查看磁盘分区信息</td>\n</tr>\n<tr>\n<td>du -H -h</td>\n<td>查看目录及子目录大小</td>\n</tr>\n<tr>\n<td>du -sh *</td>\n<td>查看当前目录下各个文件, 文件夹占了多少空间, 不会递归</td>\n</tr>\n<tr>\n<td>wc -l filename</td>\n<td>查看文件里有多少行</td>\n</tr>\n<tr>\n<td>wc -w filename</td>\n<td>看文件里有多少个word</td>\n</tr>\n<tr>\n<td>wc -L filename</td>\n<td>文件里最长的那一行是多少个字</td>\n</tr>\n<tr>\n<td>wc -c</td>\n<td>统计字节数</td>\n</tr>\n<tr>\n<td>tar czvf xxx.tar</td>\n<td>压缩目录</td>\n</tr>\n<tr>\n<td>zip -r xxx.zip</td>\n<td>压缩目录</td>\n</tr>\n<tr>\n<td>tar zxvf xxx.tar</td>\n<td></td>\n</tr>\n<tr>\n<td>tar zxvf xxx.tar -C &#x2F;xxx&#x2F;yyy&#x2F;</td>\n<td>解压到指定文件夹</td>\n</tr>\n<tr>\n<td>unzip xxx.zip</td>\n<td></td>\n</tr>\n<tr>\n<td>chown eagleye.eagleye xxx.log</td>\n<td>变更文件所属用户, 用户组</td>\n</tr>\n<tr>\n<td>cp xxx.log</td>\n<td>复制</td>\n</tr>\n<tr>\n<td>cp -f xxx.log</td>\n<td>复制并强制覆盖同名文件</td>\n</tr>\n<tr>\n<td>cp -r xxx(源文件夹) yyy(目标文件夹)</td>\n<td>复制文件夹</td>\n</tr>\n<tr>\n<td>scp -P ssh端口 <a href=\"mailto:&#117;&#x73;&#x65;&#114;&#x6e;&#97;&#x6d;&#x65;&#64;&#x31;&#48;&#46;&#49;&#48;&#x2e;&#49;&#x30;&#x2e;&#49;&#48;&#49;\">&#117;&#x73;&#x65;&#114;&#x6e;&#97;&#x6d;&#x65;&#64;&#x31;&#48;&#46;&#49;&#48;&#x2e;&#49;&#x30;&#x2e;&#49;&#48;&#49;</a>:&#x2F;home&#x2F;username&#x2F;xxx &#x2F;home&#x2F;xxx</td>\n<td>远程复制</td>\n</tr>\n<tr>\n<td>mkdir -p &#x2F;xxx&#x2F;yyy&#x2F;zzz</td>\n<td>级联创建目录</td>\n</tr>\n<tr>\n<td>mkdir -p src&#x2F;{test,main}&#x2F;{java,resources}</td>\n<td>批量创建文件夹, 会在test,main下都创建java, resources文件夹</td>\n</tr>\n<tr>\n<td>diff -u 1.txt 2.txt</td>\n<td>比较两个文件</td>\n</tr>\n<tr>\n<td>tail -f xxx.log | pv -bt</td>\n<td>如果做性能测试, 可以每执行一次, 往日志里面输出 “.” , 这样日志中的字节数就是实际的性能测试运行的次数, 还可以看见实时速率.</td>\n</tr>\n<tr>\n<td>cat -v xxx.sh</td>\n<td>查看特殊字符</td>\n</tr>\n<tr>\n<td>sed -i ‘s&#x2F;^M&#x2F;&#x2F;g’ env.sh 去除文件的特殊字符, 比如^M: 需要这样输入: ctrl+v+enter</td>\n<td>去除特殊字符</td>\n</tr>\n<tr>\n<td>cat file.sh &gt; file.sh_bak</td>\n<td>可以转换为该系统下的文件格式</td>\n</tr>\n<tr>\n<td>cat &gt; file1.sh</td>\n<td>先将file.sh中文件内容复制下来然后运行, 然后粘贴内容, 最后ctrl + d 保存退出</td>\n</tr>\n<tr>\n<td>:set fileencodings&#x3D;utf-8 ，然后 w （存盘）一下即可转化为 utf8 格式，<br/>:set fileformat&#x3D;unix</td>\n<td>在vim中通过如下设置文件编码和文件格式</td>\n</tr>\n<tr>\n<td>find . -name “*.sh” | xargs dos2unix</td>\n<td>在mac下使用dos2unix进行文件格式化</td>\n</tr>\n<tr>\n<td>awk ‘{print $0}’ xxx.log | tee test.log</td>\n<td>重定向的同时输出到屏幕</td>\n</tr>\n<tr>\n<td>grep -v xxx</td>\n<td>反向匹配, 查找不包含xxx的内容</td>\n</tr>\n<tr>\n<td>grep -v ‘^&#x2F;pre&gt;</td>\n<td>排除所有空行</td>\n</tr>\n<tr>\n<td>grep -n “^$” 111.txt</td>\n<td>返回结果 2,则说明第二行是空行</td>\n</tr>\n<tr>\n<td>awk -F ‘:’ ‘{if ($5 ~ &#x2F;user&#x2F;) print $0}’ &#x2F;etc&#x2F;passwd</td>\n<td>以’:’ 为分隔符,如果第五域有user则输出该行</td>\n</tr>\n<tr>\n<td>awk -v RS&#x3D;’character’ ‘END {print –NR}’ xxx.txt</td>\n<td>统计单个文件中某个字符（串）(中文无效)出现的次数</td>\n</tr>\n<tr>\n<td>find &#x2F;home&#x2F;eagleye -name ‘*.mysql’ -print</td>\n<td>在目录下找后缀是.mysql的文件</td>\n</tr>\n<tr>\n<td>find &#x2F;doc -name ‘*bak’ -exec rm {} ;</td>\n<td>会从 &#x2F;doc 目录开始往下找，找到凡是文件名结尾为 bak的文件，把它删除掉。-exec 选项是执行的意思，rm 是删除命令，{ } 表示文件名，“;”是规定的命令结尾</td>\n</tr>\n<tr>\n<td>lsof -i:port</td>\n<td>查看什么进程使用了该端口</td>\n</tr>\n<tr>\n<td>&#x2F;sbin&#x2F;ifconfig -a | grep inet | grep -v 127.0.0.1 | grep -v inet6 | awk ‘{print $2}’ | tr -d “addr:”</td>\n<td>获取本机ip地址</td>\n</tr>\n<tr>\n<td>service iptables status</td>\n<td>查看iptables状态</td>\n</tr>\n<tr>\n<td>iptables -I INPUT -s ***.***.***.***  -j DROP</td>\n<td>要封停一个ip</td>\n</tr>\n<tr>\n<td>iptables -D INPUT -s ***.***.***.***  -j DROP</td>\n<td>要解封一个IP</td>\n</tr>\n<tr>\n<td>&#x2F;etc&#x2F;init.d&#x2F;iptables status | start | stop | restart</td>\n<td>防火墙查看状态、开启、关闭、重启</td>\n</tr>\n<tr>\n<td>nc 192.168.0.11 8000 &lt; data.txt</td>\n<td>给某一个endpoint发送TCP请求,就将data的内容发送到对端</td>\n</tr>\n<tr>\n<td>tcpdump -i em1 tcp port 12301 -s 1500 -w abc.pcap</td>\n<td>dump出本机12301端口的tcp包</td>\n</tr>\n<tr>\n<td>traceroute -I <a href=\"http://www.163.com/\">www.163.com</a></td>\n<td>traceroute默认使用udp方式, 如果是-I则改成icmp方式</td>\n</tr>\n<tr>\n<td>netstat -n | awk ‘&#x2F;^tcp&#x2F; {n&#x3D;split($(NF-1),array,”:”);if(n&lt;&#x3D;2)++S[array[(1)]];else++S[array[(4)]];++s[$NF];++N} END {for(a in S){printf(“%-20s %s\\n”, a, S[a]);++I}printf(“%-20s %s\\n”,”TOTAL_IP”,I);for(a in s) printf(“%-20s %s\\n”,a, s[a]);printf(“%-20s %s\\n”,”TOTAL_LINK”,N);}’</td>\n<td>输出每个ip的连接数，以及总的各个状态的连接数</td>\n</tr>\n<tr>\n<td>top</td>\n<td>监控linux性能命令</td>\n</tr>\n<tr>\n<td>dmesg</td>\n<td>查看系统日志</td>\n</tr>\n<tr>\n<td>iostat -xz 1</td>\n<td>磁盘IO情况监控</td>\n</tr>\n<tr>\n<td>free -m</td>\n<td>内存使用情况</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>top</p></blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">列名</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">PID</td>\n<td align=\"left\">进程id</td>\n</tr>\n<tr>\n<td align=\"left\">PPID</td>\n<td align=\"left\">父进程id</td>\n</tr>\n<tr>\n<td align=\"left\">RUSER</td>\n<td align=\"left\">Real user name</td>\n</tr>\n<tr>\n<td align=\"left\">UID</td>\n<td align=\"left\">进程所有者的用户id</td>\n</tr>\n<tr>\n<td align=\"left\">USER</td>\n<td align=\"left\">进程所有者的用户名</td>\n</tr>\n<tr>\n<td align=\"left\">GROUP</td>\n<td align=\"left\">进程所有者的组名</td>\n</tr>\n<tr>\n<td align=\"left\">TTY</td>\n<td align=\"left\">启动进程的终端名。不是从终端启动的进程则显示为 ?</td>\n</tr>\n<tr>\n<td align=\"left\">PR</td>\n<td align=\"left\">优先级</td>\n</tr>\n<tr>\n<td align=\"left\">NI</td>\n<td align=\"left\">nice值。负值表示高优先级，正值表示低优先级</td>\n</tr>\n<tr>\n<td align=\"left\">P</td>\n<td align=\"left\">最后使用的CPU，仅在多CPU环境下有意义</td>\n</tr>\n<tr>\n<td align=\"left\">%CPU</td>\n<td align=\"left\">上次更新到现在的CPU时间占用百分比</td>\n</tr>\n<tr>\n<td align=\"left\">TIME</td>\n<td align=\"left\">进程使用的CPU时间总计，单位秒</td>\n</tr>\n<tr>\n<td align=\"left\">TIME+</td>\n<td align=\"left\">进程使用的CPU时间总计，单位1&#x2F;100秒</td>\n</tr>\n<tr>\n<td align=\"left\">%MEM</td>\n<td align=\"left\">进程使用的物理内存百分比</td>\n</tr>\n<tr>\n<td align=\"left\">VIRT</td>\n<td align=\"left\">进程使用的虚拟内存总量，单位kb。VIRT&#x3D;SWAP+RES</td>\n</tr>\n<tr>\n<td align=\"left\">SWAP</td>\n<td align=\"left\">进程使用的虚拟内存中，被换出的大小，单位kb。</td>\n</tr>\n<tr>\n<td align=\"left\">RES</td>\n<td align=\"left\">进程使用的、未被换出的物理内存大小，单位kb。RES&#x3D;CODE+DATA</td>\n</tr>\n<tr>\n<td align=\"left\">CODE</td>\n<td align=\"left\">可执行代码占用的物理内存大小，单位kb</td>\n</tr>\n<tr>\n<td align=\"left\">DATA</td>\n<td align=\"left\">可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb</td>\n</tr>\n<tr>\n<td align=\"left\">SHR</td>\n<td align=\"left\">共享内存大小，单位kb</td>\n</tr>\n<tr>\n<td align=\"left\">nFLT</td>\n<td align=\"left\">页面错误次数</td>\n</tr>\n<tr>\n<td align=\"left\">nDRT</td>\n<td align=\"left\">最后一次写入到现在，被修改过的页面数。</td>\n</tr>\n<tr>\n<td align=\"left\">S</td>\n<td align=\"left\">进程状态。D&#x3D;不可中断的睡眠状态,R&#x3D;运行,S&#x3D;睡眠,T&#x3D;跟踪&#x2F;停止,Z&#x3D;僵尸进程</td>\n</tr>\n<tr>\n<td align=\"left\">COMMAND</td>\n<td align=\"left\">命令名&#x2F;命令行</td>\n</tr>\n<tr>\n<td align=\"left\">WCHAN</td>\n<td align=\"left\">若该进程在睡眠，则显示睡眠中的系统函数名</td>\n</tr>\n<tr>\n<td align=\"left\">Flags</td>\n<td align=\"left\">任务标志，参考 sched.h</td>\n</tr>\n</tbody></table>\n","text":"参考 命令 释义 shutdown -h now 关机 shutdown -r now 重启 uname -a 查看系统内核信息 cat &#x2F;proc&#x2F;version 查看系统内核版本 env 查看当前用户的环境变量 cat &#x2F;proc&#x2F;cp...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"查找重复字符","uid":"e80867b83c958ad66c16e6a82d1e8c29","slug":"07_LeetCode/查重","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/查重.json","keywords":null,"cover":null,"text":"给出一个字符串，返回里面连续字母的个数，比如：abbcddde,返回 1a2b1c3de; 1234567891011121314151617181920function str($str)&#123; $res = &#x27;&#x27;; $arr = str_split(...","link":"","photos":[],"count_time":{"symbolsCount":497,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"查重","slug":"查重","count":1,"path":"api/tags/查重.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"索引失效的原因","uid":"fab493d9c5b4a3034c764bb5ca7924c1","slug":"01_MySQL/索引/失效原因","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:01.993Z","comments":true,"path":"api/articles/01_MySQL/索引/失效原因.json","keywords":null,"cover":null,"text":"使用not in、not exists、!=、&lt;&gt;、or、函数、运算符、模糊搜索以及类型不一致等情况会导致索引失效； 不满足 最左前缀原则 范围索引列 没有放最后 使用了select * 索引列上有计算、函数运算 字符类型没加引号，隐式转换 使用is (no) nul...","link":"","photos":[],"count_time":{"symbolsCount":180,"symbolsTime":"1 mins."},"categories":[{"name":"索引","slug":"索引","count":14,"path":"api/categories/索引.json"}],"tags":[{"name":"索引","slug":"索引","count":14,"path":"api/tags/索引.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}