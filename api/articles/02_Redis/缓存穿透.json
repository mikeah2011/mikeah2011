{"title":"Redis缓存穿透","uid":"a0f45cd6c322a6e03b4044aafd033b7f","slug":"02_Redis/缓存穿透","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存穿透.json","keywords":null,"cover":[],"content":"<p>我们使用Redis大部分情况都是通过Key查询对应的值，假如发送的请求传进来的key是不存在Redis中的，那么就查不到缓存，查不到缓存就会去数据库查询。假如有大量这样的请求，这些请求像“穿透”了缓存一样直接打在数据库上，这种现象就叫做缓存穿透。</p>\n<p><strong>分析：</strong></p>\n<p>关键在于在Redis查不到key值，这和缓存击穿有根本的区别，区别在于<strong>缓存穿透的情况是传进来的key在Redis中是不存在的</strong>。假如有黑客传进大量的不存在的key，那么大量的请求打在数据库上是很致命的问题，所以在日常开发中要对参数做好校验，一些非法的参数，不可能存在的key就直接返回错误提示，要对调用方保持这种“不信任”的心态。</p>\n<p><img src=\"/mikeah2011/Users/michael/Project/MichaelBlog/images/redis_%E7%A9%BF%E9%80%8F.png\" alt=\"img\"></p>\n<p><strong>解决方案：</strong></p>\n<p>1、<strong>把无效的Key存进Redis中</strong>。如果Redis查不到数据，数据库也查不到，我们把这个Key值保存进Redis，设置value&#x3D;”null”，当下次再通过这个Key查询时就不需要再查询数据库。这种处理方式肯定是有问题的，假如传进来的这个不存在的Key值每次都是随机的，那存进Redis也没有意义。</p>\n<p>2、<strong>使用布隆过滤器</strong>。布隆过滤器的作用是某个 key 不存在，那么就一定不存在，它说某个 key 存在，那么很大可能是存在(存在一定的误判率)。于是我们可以在缓存之前再加一层布隆过滤器，在查询的时候先去布隆过滤器查询 key 是否存在，如果不存在就直接返回。</p>\n<p><img src=\"/mikeah2011/Users/michael/Project/MichaelBlog/images/redis_%E7%A9%BF%E9%80%8F%E6%96%B9%E6%A1%88.png\" alt=\"img\"></p>\n","text":"我们使用Redis大部分情况都是通过Key查询对应的值，假如发送的请求传进来的key是不存在Redis中的，那么就查不到缓存，查不到缓存就会去数据库查询。假如有大量这样的请求，这些请求像“穿透”了缓存一样直接打在数据库上，这种现象就叫做缓存穿透。 分析： 关键在于在Redis查不...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}},"mapped":true,"prev_post":{"title":"Redis缓存击穿","uid":"406c5d5fe6c6fd475c83074ee629ccea","slug":"02_Redis/缓存击穿","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存击穿.json","keywords":null,"cover":null,"text":"什么是缓存击穿？ 其实跟缓存雪崩有点类似，缓存雪崩是大规模的key失效，而缓存击穿是一个热点的Key，有大并发集中对其进行访问，突然间这个Key失效了，导致大并发全部打在数据库上，导致数据库压力剧增。这种现象就叫做缓存击穿。 分析： 关键在于某个热点的key失效了，导致大并发集中...","link":"","photos":[],"count_time":{"symbolsCount":321,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},"next_post":{"title":"Redis缓存雪崩","uid":"8c8ef61b68dd77d38b57f5cea2b182a9","slug":"02_Redis/缓存雪崩","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存雪崩.json","keywords":null,"cover":[],"text":"当某一个时刻出现大规模的缓存失效的情况，那么就会导致大量的请求直接打在数据库上面，导致数据库压力巨大，如果在高并发的情况下，可能瞬间就会导致数据库宕机。这时候如果运维马上又重启数据库，马上又会有新的流量把数据库打死。这就是缓存雪崩。 分析： 造成缓存雪崩的关键在于在同一时间大规模...","link":"","photos":[],"count_time":{"symbolsCount":468,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}}}