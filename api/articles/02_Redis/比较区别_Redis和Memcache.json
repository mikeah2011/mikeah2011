{"title":"Redis缓存","uid":"3682ab669363b7cc91c7e1f90f676fac","slug":"02_Redis/比较区别_Redis和Memcache","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/比较区别_Redis和Memcache.json","keywords":null,"cover":null,"content":"<p>数据结构：memcache仅支持简单的key-value形式，Redis支持的数据更多（string字符串，set集合，list列表，hash散列，zset有序集合）；</p>\n<p>多线程：memcache支持多线程，Redis支持单线程</p>\n<p>持久化：Redis支持持久化，memcache不支持持久化</p>\n<p>分布式：Redis做主从结构，memcache服务器需要通过hash一致化来支撑主从结构</p>\n<p>实际运用中可以redis，memcache结合，memcache可作为session存储的方式，session都是KV类型键值对。</p>\n<ol>\n<li><p>Redis中，并不是所有的数据都一直存储在内存中的，这是和Memcache相比一个最大的区别。</p>\n</li>\n<li><p>Redis在很多方面具备数据库的特征，或者说就是一个数据库系统，而Memcache只是简单的K&#x2F;V缓存。</p>\n</li>\n<li><p>他们的扩展都需要做集群；实现方式：master-slave、Hash。</p>\n</li>\n<li><p>在100k以上的数据中，Memcache性能要高于Redis。</p>\n</li>\n<li><p>如果要说内存使用效率，使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcache。当然，这和你的应用场景和数据特性有关。</p>\n</li>\n<li><p>如果你对数据持久化和数据同步有所要求，那么推荐你选择Redis，因为这两个特性Memcache都不具备。即使你只是希望在升级或者重启系统后缓存数据不会丢失，选择Redis也是明智的。</p>\n</li>\n<li><p>Redis和Memcache在写入性能上面差别不大，读取性能上面尤其是批量读取性能上面Memcache更强</p>\n</li>\n<li><p>Redis 提供了多种不同级别的持久化方式：</p>\n</li>\n</ol>\n<p>RDB 持久化可以在指定的时间间隔内生成数据集的时间点快照（point-in-time snapshot）。</p>\n<p>AOF 持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。 AOF 文件中的命令全部以 Redis 协议的格式来保存，新命令会被追加到文件的末尾。 Redis 还可以在后台对 AOF 文件进行重写（rewrite），使得 AOF 文件的体积不会超出保存数据集状态所需的实际大小。</p>\n<p>Redis 还可以同时使用 AOF 持久化和 RDB 持久化。 在这种情况下， 当 Redis 重启时， 它会优先使用 AOF 文件来还原数据集， 因为 AOF 文件保存的数据集通常比 RDB 文件所保存的数据集更完整。</p>\n<p>你甚至可以关闭持久化功能，让数据只在服务器运行时存在。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>归纳</p></blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Redis</th>\n<th>Memcache</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数据结构</td>\n<td>string、set集合、list列表、hash散列、zset有序集合</td>\n<td>key-value</td>\n</tr>\n<tr>\n<td>多线程</td>\n<td>NO</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>持久化</td>\n<td>RDB快照、AOF日志</td>\n<td>NO</td>\n</tr>\n<tr>\n<td>分布式</td>\n<td>主从结构</td>\n<td>hash一致化</td>\n</tr>\n<tr>\n<td>读写</td>\n<td>读11w&#x2F;s，写8w&#x2F;s</td>\n<td>读更优</td>\n</tr>\n<tr>\n<td>特性</td>\n<td>具备数据库特征，NoSQL</td>\n<td>K&#x2F;V缓存</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>100KB以内的数据，更优</td>\n<td>100KB以上的数据，更优</td>\n</tr>\n<tr>\n<td>集群</td>\n<td>Master-slave hash</td>\n<td>Master-slave hash</td>\n</tr>\n<tr>\n<td>数据存储</td>\n<td>并非所有的数据都一直存储在内存中</td>\n<td>所有的都存在内存中</td>\n</tr>\n<tr>\n<td>内存使用率</td>\n<td>如果是hash结构的key-value，组合式的压缩，会高</td>\n<td>高</td>\n</tr>\n</tbody></table>\n","text":"数据结构：memcache仅支持简单的key-value形式，Redis支持的数据更多（string字符串，set集合，list列表，hash散列，zset有序集合）； 多线程：memcache支持多线程，Redis支持单线程 持久化：Redis支持持久化，memcache不支持...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":9,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":9,"path":"api/tags/redis.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"MySQL面试题","uid":"2a240a0b6536e25078add1806f7b654e","slug":"01_MySQL/面试题","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.000Z","comments":true,"path":"api/articles/01_MySQL/面试题.json","keywords":null,"cover":[],"text":" ","link":"","photos":[],"count_time":{"symbolsCount":2,"symbolsTime":"1 mins."},"categories":[{"name":"SQL","slug":"SQL","count":15,"path":"api/categories/SQL.json"},{"name":"面试题","slug":"SQL/面试题","count":1,"path":"api/categories/SQL/面试题.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":16,"path":"api/tags/MySQL.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"Redis高并发","uid":"b8997c28f0beb7e2efaf414b6b406c0f","slug":"02_Redis/防止高并发","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.011Z","comments":true,"path":"api/articles/02_Redis/防止高并发.json","keywords":null,"cover":null,"text":" 背景 Redis是不会存在并发问题的，因为他是单进程的，再多的命令都是一个接一个地执行的。 场景 GET &amp; SET 利用Jedis等客户端对Redis进行并发访问 远程访问Redis的时候，因为网络等原因造成高并发访问、延迟返回 我们使用的时候，可能会出现并发问题，比...","link":"","photos":[],"count_time":{"symbolsCount":561,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":9,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":9,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}