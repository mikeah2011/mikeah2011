{"title":"HTTP 三次握手","uid":"07ce52ba0deb3c9ebe285ff3996a2db7","slug":"03_HTTP/三次握手","date":"2017-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.012Z","comments":true,"path":"api/articles/03_HTTP/三次握手.json","keywords":null,"cover":[],"content":"<ol>\n<li>第一次握手：Client将标志位SYN置为1，随机产生一个值seq&#x3D;J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。</li>\n<li>第二次握手：Server收到数据包后由标志位SYN&#x3D;1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack&#x3D;J+1，随机产生一个值seq&#x3D;K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。</li>\n<li>第三次握手：Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack&#x3D;K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。</li>\n</ol>\n<p><img src=\"/mikeah2011/Users/michael/Project/MichaelBlog/images/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png\" alt=\"img\"></p>\n<p><strong>为什么要进行三次握手呢?</strong> </p>\n<p>第三次握手是为了防止失效的连接请求到达服器，让服务器错误打开连接。</p>\n<p>客户端发送的连接请求如果在网络中滞留，那么就会隔很长一段时间才能收到服务器端发回的连接确认。</p>\n<p>客户端等待一个超时重传时间之后，就会重新请求连接。但是这个滞留的连接请求最后还是会到达服务器，如果不进行三次握手，那么服务器就会打开两个连接。</p>\n<p>如果有第三次握手，客户端会忽略服务器之后发送的对滞留连接请求的连接确认，不进行第三次握手，因此就不会再次打开连接。</p>\n<p>​\t<strong>如果此时变成两次握手行不行？</strong></p>\n<p>举个打电话的例子，比如：</p>\n<p>第一次握手：A给B打电话说，你可以听到我说话吗？</p>\n<p>第二次握手：B收到了A的信息，然后对A说：我可以听得到你说话啊，你能听得到我说话吗？</p>\n<p>第三次握手：A收到了B的信息，然后说可以的，我要给你发信息啦！</p>\n<p><strong>结论：</strong>在三次握手之后，A和B都能确定这么一件事：我能听到你，你也能听到我。</p>\n<p>这样，就可以开始正常通信了。如果是两次，那将无法确定。</p>\n","text":" 第一次握手：Client将标志位SYN置为1，随机产生一个值seq&#x3D;J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。 第二次握手：Server收到数据包后由标志位SYN&#x3D;1知道Client请求建立连接，Serv...","link":"","photos":[],"count_time":{"symbolsCount":840,"symbolsTime":"1 mins."},"categories":[{"name":"网络编程","slug":"网络编程","count":9,"path":"api/categories/网络编程.json"}],"tags":[{"name":"HTTP","slug":"HTTP","count":5,"path":"api/tags/HTTP.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"HTTPS","uid":"972e329cd1da7ac5452b9664a39b21b1","slug":"03_HTTP/HTTPS","date":"2017-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.011Z","comments":true,"path":"api/articles/03_HTTP/HTTPS.json","keywords":null,"cover":[],"text":"HTTPS：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。HTTPS协议的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。 HTT...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"网络编程","slug":"网络编程","count":9,"path":"api/categories/网络编程.json"}],"tags":[{"name":"HTTPS","slug":"HTTPS","count":1,"path":"api/tags/HTTPS.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"HTTP四次挥手","uid":"31e25675b77f47e927b5d00900537180","slug":"03_HTTP/四次挥手","date":"2017-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.012Z","comments":true,"path":"api/articles/03_HTTP/四次挥手.json","keywords":null,"cover":[],"text":" 第一次挥手，客户端设置seq和 ACK ,向服务器发送一个 FIN(终结)报文段。此时，客户端进入 FIN_WAIT_1状态，表示客户端没有数据要发送给服务端了。 第二次挥手，服务端收到了客户端发送的 FIN 报文段，向客户端回了一个 ACK 报文段。 第三次挥手，服务端向客户...","link":"","photos":[],"count_time":{"symbolsCount":598,"symbolsTime":"1 mins."},"categories":[{"name":"网络编程","slug":"网络编程","count":9,"path":"api/categories/网络编程.json"}],"tags":[{"name":"HTTP","slug":"HTTP","count":5,"path":"api/tags/HTTP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}