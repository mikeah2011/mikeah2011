{"title":"PHP自动加载类机制","uid":"e056c643723f9ba21fb813a935518ef7","slug":"05_PHP/自动加载","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.019Z","comments":true,"path":"api/articles/05_PHP/自动加载.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>自动加载</p></blockquote>\n<p>在 PHP 开发过程中，如果希望从外部引入一个 class，通常会使用 include 和 require 方法，去把定义这个 class 的文件包含进来；</p>\n<p>PHP5 提供了一个类的自动装载 (autoload) 机制。</p>\n<p>autoload 机制可以使得 PHP 程序有可能在使用类时才自动包含类文件，</p>\n<p>而不是一开始就将所有的类文件 include 进来，这种机制也称为 lazy loading。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">function __autoload($className) &#123;\n  echo &#39;__autload class:&#39;, $className, &#39;&lt;br &#x2F;&gt;&#39;;\n&#125;</code></pre>\n\n\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">function __autoload($className) &#123;\n  require_once($className . &quot;class.php&quot;); \n&#125;</code></pre>\n\n\n\n<p>autoload 至少要做三件事情：</p>\n<ol>\n<li><p>根据类名确定类文件名；</p>\n</li>\n<li><p>确定类文件所在的磁盘路径</p>\n<p> 在我们的例子是最简单的情况，类与调用它们的 PHP 程序文件在同一个文件夹下；</p>\n</li>\n<li><p>将类从磁盘文件中加载到系统中。</p>\n</li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>使用类之前无需 include 或者 require。</li>\n<li>使用类的时候才会 require&#x2F;include 文件，实现了 lazy loading，避免了 require&#x2F;include 多余文件。</li>\n<li>无需考虑引入类的实际磁盘地址，实现了逻辑和实体文件的分离。</li>\n</ol>\n<p>SPL Autoload 具体有几个函数：</p>\n<p><code>spl_autoload_register</code>：注册 _autoload () 函数</p>\n<p><code>spl_autoload_unregister</code>：注销已注册的函数</p>\n<p><code>spl_autoload_functions</code>：返回所有已注册的函数</p>\n<p><code>spl_autoload_call</code>：尝试所有已注册的函数来加载类</p>\n<p><code>spl_autoload</code> ：_autoload () 的默认实现</p>\n<p><code>spl_autoload_extionsions</code>： 注册并返回 spl_autoload 函数使用的默认文件扩展名。</p>\n","text":" 自动加载 在 PHP 开发过程中，如果希望从外部引入一个 class，通常会使用 include 和 require 方法，去把定义这个 class 的文件包含进来； PHP5 提供了一个类的自动装载 (autoload) 机制。 autoload 机制可以使得 PHP 程序有...","link":"","photos":[],"count_time":{"symbolsCount":948,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"PHP内置系统函数","uid":"b760d8b0139b4afd182432843b5ddcf1","slug":"05_PHP/系统函数","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.019Z","comments":true,"path":"api/articles/05_PHP/系统函数.json","keywords":null,"cover":null,"text":" 系统函数 意义 备注 function_exists 系统或自定义函数 是否存在 class_exists 类是否存在 method_exists 类方法是否定义 property_exists 类属性是否定义 empty 类、变量、元素等是否为空 ","link":"","photos":[],"count_time":{"symbolsCount":147,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}}},"next_post":{"title":"查找重复字符","uid":"e80867b83c958ad66c16e6a82d1e8c29","slug":"07_LeetCode/查重","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/查重.json","keywords":null,"cover":null,"text":"给出一个字符串，返回里面连续字母的个数，比如：abbcddde,返回 1a2b1c3de; function str($str) &#123; $res &#x3D; &#39;&#39;; $arr &#x3D; str_split($str);&#x2F;&#x2F;把字符串...","link":"","photos":[],"count_time":{"symbolsCount":598,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"查重","slug":"查重","count":1,"path":"api/tags/查重.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}}}}