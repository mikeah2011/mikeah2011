{"title":"PHP5与PHP7","uid":"8ad7c02366ba3448c825d7359d268365","slug":"05_PHP/PHP5与PHP7","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/05_PHP/PHP5与PHP7.json","keywords":null,"cover":null,"content":"<ol>\n<li>改进的性能 - 将 PHPNG 代码合并到 PHP7 中，速度是 PHP 5 的两倍。</li>\n<li>降低内存消耗 - 优化的 PHP 7 使用较少的资源。</li>\n<li>标量类型声明 - 现在可以强制执行参数和返回类型。</li>\n<li>一致的 64 位支持 - 对 64 位体系结构机器的一致支持。</li>\n<li>改进了异常层次 - 异常层次得到了改进</li>\n<li>许多致命的错误转换为例外 - 例外范围增加，涵盖许多致命的错误转换为例外。</li>\n<li>安全随机数发生器 - 增加新的安全随机数发生器 API。</li>\n<li>已弃用的 SAPI 和扩展已删除 - 各种旧的和不受支持的 SAPI 和扩展从最新版本中删除。</li>\n<li>空合并运算符（？） - 添加了新的空合并运算符。</li>\n<li>返回和标量类型声明 - 支持所添加的返回类型和参数类型。</li>\n<li>匿名类 - 支持匿名添加。</li>\n<li>零成本断言 - 支持零成本断言增加。</li>\n</ol>\n","text":" 改进的性能 - 将 PHPNG 代码合并到 PHP7 中，速度是 PHP 5 的两倍。 降低内存消耗 - 优化的 PHP 7 使用较少的资源。 标量类型声明 - 现在可以强制执行参数和返回类型。 一致的 64 位支持 - 对 64 位体系结构机器的一致支持。 改进了异常层次 -...","link":"","photos":[],"count_time":{"symbolsCount":354,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}},"mapped":true,"prev_post":{"title":"Opcache","uid":"85c12a31d0c9184040aa4bab328e79c5","slug":"05_PHP/Opcache","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/05_PHP/Opcache.json","keywords":null,"cover":null,"text":"Opcache - 扩展 ","link":"","photos":[],"count_time":{"symbolsCount":13,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"},{"name":"扩展","slug":"扩展","count":1,"path":"api/tags/扩展.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},"next_post":{"title":"GC - 垃圾回收机制","uid":"6b6fc9dba74c7910bcbe51ca5306e95c","slug":"05_PHP/垃圾回收机制","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/垃圾回收机制.json","keywords":null,"cover":null,"text":"GC 垃圾回收机制 自动进行内存管理，清除不需要的对象，使用了引用计数GC机制。 ​ 每个对象都内含一个引用计数器，连接到对象，计数器+1； ​ 当离开生存扣减或者设置为NULL时，计数器-1； 当引用计数器为零时，PHP将释放其所占的内存空间。 ","link":"","photos":[],"count_time":{"symbolsCount":124,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}}}