{"title":"PHP版本区别","uid":"310cdbee74459a58b10a045d6d41a3f0","slug":"05_PHP/比较区别_PHP版本","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.018Z","comments":true,"path":"api/articles/05_PHP/比较区别_PHP版本.json","keywords":null,"cover":null,"content":"<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th align=\"center\">特性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4</td>\n<td align=\"center\">支持 autoload、PDO 和 MySQLi、类型约束，纯过程式语言，没太多复杂的</td>\n</tr>\n<tr>\n<td align=\"center\">5.2</td>\n<td align=\"center\">支持JSON，完全实现了面向对象</td>\n</tr>\n<tr>\n<td align=\"center\">5.3</td>\n<td align=\"center\">匿名函数，魔术方法，命名空间，后期静态变量绑定，hereDoc、nowDoc、const、三元运算、Phar</td>\n</tr>\n<tr>\n<td align=\"center\">5.4</td>\n<td align=\"center\">(无需修改ini配置)短标签，数组简写，Traits工具类，内置Web服务器</td>\n</tr>\n<tr>\n<td align=\"center\">5.5</td>\n<td align=\"center\">yield迭代器、生成器(foreach)，foreach支持list()</td>\n</tr>\n<tr>\n<td align=\"center\">5.6</td>\n<td align=\"center\">增强常量、命名空间，可变函数参数，**幂运算，大文件上传，php:&#x2F;&#x2F;input可重用</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://php.net/manual/zh/migration70.new-features.php\">7.0</a></td>\n<td align=\"center\">新版ZendEngine引擎，匿名类，返回类型声明，变量类型、错误异常、zval使用栈内存等许多新特性</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://php.net/manual/zh/migration71.new-features.php\">7.1</a></td>\n<td align=\"center\">可空(NullLable)类型、list简写[]、指定key，const常量可指定权限，多异常捕获处理</td>\n</tr>\n<tr>\n<td align=\"center\">7.2</td>\n<td align=\"center\">新的对象类型，逆变和协变，通过名称加载扩展，允许重写抽象方法，使用argon2算法生成密码散列，新增ext&#x2F;PDO字符串扩展类型</td>\n</tr>\n<tr>\n<td align=\"center\">7.3</td>\n<td align=\"center\">取数组第一个&#x2F;最后一个键</td>\n</tr>\n<tr>\n<td align=\"center\">7.4</td>\n<td align=\"center\">数组延展操作符(…$a)、箭头函数(&#x3D;&gt;)，空合并运算赋值</td>\n</tr>\n<tr>\n<td align=\"center\">8.0</td>\n<td align=\"center\">注解、JIT、命名参数、联合类型、构造器属性提升，match表达式、nullsafe运算符、改进了类型系统、错误处理、语法一致性</td>\n</tr>\n<tr>\n<td align=\"center\">8.1</td>\n<td align=\"center\">枚举、只读属性、first-class可调用语法、纤程、交集类型和性能改进等</td>\n</tr>\n</tbody></table>\n","text":" 版本 特性 4 支持 autoload、PDO 和 MySQLi、类型约束，纯过程式语言，没太多复杂的 5.2 支持JSON，完全实现了面向对象 5.3 匿名函数，魔术方法，命名空间，后期静态变量绑定，hereDoc、nowDoc、const、三元运算、Phar 5.4 (无需...","link":"","photos":[],"count_time":{"symbolsCount":669,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"PHP依赖注入","uid":"dd3ad8310bb65f7ae1074f767c58a90d","slug":"05_PHP/依赖注入","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/依赖注入.json","keywords":null,"cover":null,"text":"依赖注入 IOC（inversion of control） 控制反转模式；控制反转是将组件间的依赖关系从程序内部提到外部来管理； DI（dependency injection）依赖注入模式； 依赖注入是指将组件的依赖通过外部以 参数或其他形式 注入； ","link":"","photos":[],"count_time":{"symbolsCount":128,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"接口与抽象类","uid":"9aaf2af7e7121b62182052d72c57944c","slug":"05_PHP/比较区别_interface与abstract","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.018Z","comments":true,"path":"api/articles/05_PHP/比较区别_interface与abstract.json","keywords":null,"cover":null,"text":" 区别 接口类 抽象类 条件 必须实现接口类中所有的公共方法 必须定义父类中所有的抽象方法 关键字 interface abstract 方式 实现implements 继承extends 特性 实现多个接口 只能继承一个抽象类 修饰符 public 公有的 保持一致或更为宽泛 ...","link":"","photos":[],"count_time":{"symbolsCount":155,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}