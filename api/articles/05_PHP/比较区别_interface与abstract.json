{"title":"接口与抽象类","uid":"9aaf2af7e7121b62182052d72c57944c","slug":"05_PHP/比较区别_interface与abstract","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.018Z","comments":true,"path":"api/articles/05_PHP/比较区别_interface与abstract.json","keywords":null,"cover":null,"content":"<table>\n<thead>\n<tr>\n<th align=\"center\">区别</th>\n<th align=\"center\">接口类</th>\n<th align=\"center\">抽象类</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">条件</td>\n<td align=\"center\">必须实现接口类中所有的<strong>公共</strong>方法</td>\n<td align=\"center\">必须定义父类中所有的<strong>抽象</strong>方法</td>\n</tr>\n<tr>\n<td align=\"center\">关键字</td>\n<td align=\"center\"><code>interface</code></td>\n<td align=\"center\"><code>abstract</code></td>\n</tr>\n<tr>\n<td align=\"center\">方式</td>\n<td align=\"center\">实现<code>implements</code></td>\n<td align=\"center\">继承<code>extends</code></td>\n</tr>\n<tr>\n<td align=\"center\">特性</td>\n<td align=\"center\">实现多个接口</td>\n<td align=\"center\">只能继承一个抽象类</td>\n</tr>\n<tr>\n<td align=\"center\">修饰符</td>\n<td align=\"center\"><code>public</code> 公有的</td>\n<td align=\"center\">保持一致或更为宽泛</td>\n</tr>\n</tbody></table>\n","text":" 区别 接口类 抽象类 条件 必须实现接口类中所有的公共方法 必须定义父类中所有的抽象方法 关键字 interface abstract 方式 实现implements 继承extends 特性 实现多个接口 只能继承一个抽象类 修饰符 public 公有的 保持一致或更为宽泛 ...","link":"","photos":[],"count_time":{"symbolsCount":155,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":23,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"常见的设计模式","uid":"1a2ade4f8c304fc2bc170e0b21a2a998","slug":"05_PHP/常见设计模式","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/常见设计模式.json","keywords":null,"cover":null,"text":" 设计模式 概念 代码 工厂模式 用来实现创建对象和对象的使用分离，将对象的创建交给专门的工厂类负责简单工厂模式工厂模式抽象工厂模式 简单工厂模式，根据不同的入参new实例化不同的类对象 单例模式 保证一个类仅有一个实例，并提供一个访问它的全局访问点。 适配器模式 将一个类的接口...","link":"","photos":[],"count_time":{"symbolsCount":367,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":23,"path":"api/categories/PHP.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":1,"path":"api/tags/设计模式.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"PHP版本区别","uid":"310cdbee74459a58b10a045d6d41a3f0","slug":"05_PHP/比较区别_PHP版本","date":"2021-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.018Z","comments":true,"path":"api/articles/05_PHP/比较区别_PHP版本.json","keywords":null,"cover":null,"text":" 版本 特性 4 支持 autoload、PDO 和 MySQLi、类型约束，纯过程式语言，没太多复杂的 5.2 支持JSON，完全实现了面向对象 5.3 匿名函数，魔术方法，命名空间，后期静态变量绑定，hereDoc、nowDoc、const、三元运算、Phar 5.4 (无需...","link":"","photos":[],"count_time":{"symbolsCount":669,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":23,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}