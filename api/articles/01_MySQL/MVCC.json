{"title":"MySQL - MVCC","uid":"ef9e2edc26d3ded046b353bb82c77d51","slug":"01_MySQL/MVCC","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:01.990Z","comments":true,"path":"api/articles/01_MySQL/MVCC.json","keywords":null,"cover":[],"content":"<p><code>MVCC</code>叫做<strong>多版本控制</strong>，实现MVCC时用到了<strong>一致性视图</strong>，用于支持<strong>读提交</strong>和<strong>可重复读</strong>的实现。</p>\n<p>对于一行数据若是想实现可重复读取或者能够读取数据的另一个事务未提交前的原始值，那么必须对原始数据进行保存或者对更新操作进行保存，这样才能够查询到原始值。</p>\n<p>在Mysql的MVCC中规定<strong>每一行数据都有多个不同的版本，一个事务更新操作完后就生成一个新的版本</strong>，并不是对全部数据的全量备份，因为全量备份的代价太大了：</p>\n<p><img src=\"/mikeah2011/Users/michael/Project/MichaelBlog/images/64110.png\" alt=\"图片\"></p>\n<p>如图中所示，假如三个事务更新了同一行数据，那么就会有对应的v1、v2、v3三个数据版本，每一个事务在开始的时候都获得一个唯一的事务id（<code>transaction id</code>），并且是顺序递增的，并且这个事务id最后会赋值给<code>row trx_id</code>，这样就形成了一个唯一的一行数据版本。</p>\n<p>实际上版本1、版本2并非实际物理存在的，而图中的U1和U2实际就是<code>undo log</code>日志（<strong>回滚日志</strong>），这v1和v2版本是根据当前v3和<code>undo log</code>计算出来的。</p>\n<p>InnoDB引擎就是利用每行数据有多个版本的特性，实现了秒级创建“快照”，并不需要花费大量的是时间。</p>\n","text":"MVCC叫做多版本控制，实现MVCC时用到了一致性视图，用于支持读提交和可重复读的实现。 对于一行数据若是想实现可重复读取或者能够读取数据的另一个事务未提交前的原始值，那么必须对原始数据进行保存或者对更新操作进行保存，这样才能够查询到原始值。 在Mysql的MVCC中规定每一行数...","link":"","photos":[],"count_time":{"symbolsCount":469,"symbolsTime":"1 mins."},"categories":[{"name":"SQL","slug":"SQL","count":15,"path":"api/categories/SQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":16,"path":"api/tags/MySQL.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"索引采用的算法","uid":"127d1f6ddaf592cdbfe5766a891f8f96","slug":"01_MySQL/索引/B+树","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:01.993Z","comments":true,"path":"api/articles/01_MySQL/索引/B+树.json","keywords":null,"cover":null,"text":" 索引为什么采用B+树，而不用B-树，红黑树 提升查询速度，首先要减少磁盘I&#x2F;O次数，也就是要降低树的高度。 平衡二叉树、红黑树，都属于二叉树。 时间复杂度为O(n)，当表的数据量上千万时，树的深度很深，mysql读取时消耗大量 IO。 另外，InnoDB引擎采用页为单...","link":"","photos":[],"count_time":{"symbolsCount":312,"symbolsTime":"1 mins."},"categories":[{"name":"索引","slug":"索引","count":14,"path":"api/categories/索引.json"}],"tags":[{"name":"索引","slug":"索引","count":15,"path":"api/tags/索引.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"SQL语句性能分析工具 - explain","uid":"91a0e294ae045d1c9047e0525f52b4fd","slug":"01_MySQL/Explain","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:01.990Z","comments":true,"path":"api/articles/01_MySQL/Explain.json","keywords":null,"cover":[],"text":"通过explain，如以下例子： EXPLAIN SELECT * FROM employees.titles WHERE emp_no&#x3D;&#39;10001&#39; AND title&#x3D;&#39;Senior Engineer&#39; AND from_...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"SQL","slug":"SQL","count":15,"path":"api/categories/SQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":16,"path":"api/tags/MySQL.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}