{"title":"冒泡排序","uid":"1d3d34015824551bc1c5fbed5c50786a","slug":"07_LeetCode/冒泡排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/冒泡排序.json","keywords":null,"cover":null,"content":"<p>在要排序的一组数中，对当前还未排好的序列，</p>\n<p>从前往后对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。</p>\n<p>即，每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$arr &#x3D; [1, 43, 54, 62, 21, 66, 32, 78, 36, 76, 39];\n\nfunction bubble_sort($arr)\n&#123;\n  $len &#x3D; count($arr);\n  &#x2F;&#x2F;该层循环控制 需要冒泡的轮数\n  for($i &#x3D; 0; $i &lt; $len - 1; $i++) &#123;\n    &#x2F;&#x2F;该层循环用来控制每轮 冒出一个数 需要比较的次数\n    for($k &#x3D; 0; $k &lt; $len- $i - 1; $k++) &#123;\n      &#x2F;&#x2F; 下一个键\n      $nk &#x3D; $k + 1;\n      &#x2F;&#x2F; 如果当前值比下一个值大\n      if($arr[$k] &gt; $arr[$nk]) &#123;\n        &#x2F;&#x2F; 把下一个值先存起来\n        $tmp      &#x3D; $arr[$nk];\n        &#x2F;&#x2F; 把当前值给下一个键，覆盖\n        $arr[$nk] &#x3D; $arr[$k];\n        &#x2F;&#x2F; 再把存起来的值，给当前键\n        $arr[$k]  &#x3D; $tmp;\n      &#125;\n    &#125;\n  &#125;\n  \n  return $arr;\n&#125;</code></pre>\n\n","text":"在要排序的一组数中，对当前还未排好的序列， 从前往后对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。 即，每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。 $arr &#x3D; [1, 43, 54, 62, 21, 66, 32, 78, ...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"冒泡排序","slug":"冒泡排序","count":1,"path":"api/tags/冒泡排序.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"MySQL三范式","uid":"6209a41d0c1bdc89b8242b6c5a89a469","slug":"01_MySQL/范式","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.000Z","comments":true,"path":"api/articles/01_MySQL/范式.json","keywords":null,"cover":null,"text":" 数据库三范式 第一范式：1NF是对属性的原子性约束，要求属性具有原子性，不可再分解； 第二范式：2NF是对记录的唯一性约束，要求记录有唯一标识，即实体的唯一性； 第三范式：3NF是对字段冗余性的约束，即任何字段不能由其他字段派生出来，它要求字段没有冗余。 范式化 优点：可以尽量...","link":"","photos":[],"count_time":{"symbolsCount":458,"symbolsTime":"1 mins."},"categories":[{"name":"SQL","slug":"SQL","count":15,"path":"api/categories/SQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":16,"path":"api/tags/MySQL.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}}},"next_post":{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"07_LeetCode/快速排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/快速排序.json","keywords":null,"cover":null,"text":"选择一个基准元素，通常选择第一个元素或者最后一个元素。 通过一趟扫描，将待排序列分成两部分， 一部分比基准元素小，一部分大于等于基准元素。 此时基准元素在其排好序后的正确位置， 然后再用同样的方法递归地排序划分的两部分。 $arr &#x3D; [1, 43, 54, 62, 2...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/","zhihu":"https://www.zhihu.com/people/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/user/","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/"},"facebook":{"icon":"iconfont icon-facebook","link":"https://facebook.com"}}}}}}