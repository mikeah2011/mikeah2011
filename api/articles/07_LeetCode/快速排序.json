{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"07_LeetCode/快速排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/快速排序.json","keywords":null,"cover":null,"content":"<p>选择一个基准元素，通常选择第一个元素或者最后一个元素。</p>\n<p>通过一趟扫描，将待排序列分成两部分，</p>\n<p>一部分比基准元素小，一部分大于等于基准元素。</p>\n<p>此时基准元素在其排好序后的正确位置，</p>\n<p>然后再用同样的方法递归地排序划分的两部分。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$arr</span> = [<span class=\"number\">1</span>, <span class=\"number\">43</span>, <span class=\"number\">54</span>, <span class=\"number\">62</span>, <span class=\"number\">21</span>, <span class=\"number\">66</span>, <span class=\"number\">32</span>, <span class=\"number\">78</span>, <span class=\"number\">36</span>, <span class=\"number\">76</span>, <span class=\"number\">39</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick_sort</span>(<span class=\"params\"><span class=\"variable\">$arr</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$len</span> = <span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$arr</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 先判断是否需要继续进行</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable\">$len</span> &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$arr</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 选择第一个元素作为基准</span></span><br><span class=\"line\">  <span class=\"variable\">$baseNum</span> = <span class=\"variable\">$arr</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"comment\">// 遍历除了标尺外的所有元素，按照大小关系放入两个数组内</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化比基准值小和大的俩个数组:</span></span><br><span class=\"line\">  <span class=\"variable\">$leftArray</span> = <span class=\"variable\">$rightArray</span> = [];</span><br><span class=\"line\">  <span class=\"comment\">// 开始从第二个值开始比较</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">1</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$len</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$baseNum</span> &gt; <span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 放入左边数组</span></span><br><span class=\"line\">      <span class=\"variable\">$leftArray</span>[]  = <span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 放入右边</span></span><br><span class=\"line\">      <span class=\"variable\">$rightArray</span>[] = <span class=\"variable\">$arr</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 再分别对左边和右边的数组进行相同的排序处理方式递归调用这个函数</span></span><br><span class=\"line\">  <span class=\"variable\">$leftArray</span>  = <span class=\"title function_ invoke__\">quick_sort</span>(<span class=\"variable\">$leftArray</span>);</span><br><span class=\"line\">  <span class=\"variable\">$rightArray</span> = <span class=\"title function_ invoke__\">quick_sort</span>(<span class=\"variable\">$rightArray</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 合并返回结果</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">array_merge</span>(<span class=\"variable\">$leftArray</span>, [<span class=\"variable\">$baseNum</span>], <span class=\"variable\">$rightArray</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","text":"选择一个基准元素，通常选择第一个元素或者最后一个元素。 通过一趟扫描，将待排序列分成两部分， 一部分比基准元素小，一部分大于等于基准元素。 此时基准元素在其排好序后的正确位置， 然后再用同样的方法递归地排序划分的两部分。 12345678910111213141516171819...","link":"","photos":[],"count_time":{"symbolsCount":886,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"冒泡排序","uid":"1d3d34015824551bc1c5fbed5c50786a","slug":"07_LeetCode/冒泡排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/冒泡排序.json","keywords":null,"cover":null,"text":"在要排序的一组数中，对当前还未排好的序列， 从前往后对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。 即，每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。 12345678910111213141516171819202122232425$ar...","link":"","photos":[],"count_time":{"symbolsCount":679,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"冒泡排序","slug":"冒泡排序","count":1,"path":"api/tags/冒泡排序.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"插入排序","uid":"f2ea62009b2a302d5e2076e5efd27611","slug":"07_LeetCode/插入排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/插入排序.json","keywords":null,"cover":null,"text":"在要排序的一组数中，假设前面的数已经是排好顺序的， 现在要把第n个数插到前面的有序数中，使得这n个数也是排好顺序的。 如此反复循环，直到全部排好顺序。 12345678910111213141516171819202122232425262728$arr = [1, 43, 54...","link":"","photos":[],"count_time":{"symbolsCount":679,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"插入排序","slug":"插入排序","count":1,"path":"api/tags/插入排序.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Just Do IT","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"http://localhost:4000/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"baidu":{"icon":"iconfont icon-baidu","link":"https://live.bilibili.com/22619211"},"book":{"icon":"far fa-address-book","link":"https://live.bilibili.com/22619211"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}