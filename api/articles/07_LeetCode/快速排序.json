{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"07_LeetCode/快速排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/快速排序.json","keywords":null,"cover":null,"content":"<p>选择一个基准元素，通常选择第一个元素或者最后一个元素。</p>\n<p>通过一趟扫描，将待排序列分成两部分，</p>\n<p>一部分比基准元素小，一部分大于等于基准元素。</p>\n<p>此时基准元素在其排好序后的正确位置，</p>\n<p>然后再用同样的方法递归地排序划分的两部分。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$arr &#x3D; [1, 43, 54, 62, 21, 66, 32, 78, 36, 76, 39];\n\nfunction quick_sort($arr)\n&#123;\n  $len &#x3D; count($arr);\n  &#x2F;&#x2F; 先判断是否需要继续进行\n  if($len &lt;&#x3D; 1) &#123;\n    \n    return $arr;\n  &#125;\n  \n  &#x2F;&#x2F; 选择第一个元素作为基准\n  $baseNum &#x3D; $arr[0];\n  &#x2F;&#x2F; 遍历除了标尺外的所有元素，按照大小关系放入两个数组内\n  &#x2F;&#x2F; 初始化比基准值小和大的俩个数组:\n  $leftArray &#x3D; $rightArray &#x3D; [];\n  &#x2F;&#x2F; 开始从第二个值开始比较\n  for ($i &#x3D; 1; $i &lt; $len; $i++) &#123;\n    if ($baseNum &gt; $arr[$i]) &#123;\n      &#x2F;&#x2F; 放入左边数组\n      $leftArray[]  &#x3D; $arr[$i];\n    &#125; else &#123;\n      &#x2F;&#x2F; 放入右边\n      $rightArray[] &#x3D; $arr[$i];\n    &#125;\n  &#125;\n  \n  &#x2F;&#x2F; 再分别对左边和右边的数组进行相同的排序处理方式递归调用这个函数\n  $leftArray  &#x3D; quick_sort($leftArray);\n  $rightArray &#x3D; quick_sort($rightArray);\n  \n  &#x2F;&#x2F; 合并返回结果\n  return array_merge($leftArray, [$baseNum], $rightArray);\n&#125;</code></pre>\n\n","text":"选择一个基准元素，通常选择第一个元素或者最后一个元素。 通过一趟扫描，将待排序列分成两部分， 一部分比基准元素小，一部分大于等于基准元素。 此时基准元素在其排好序后的正确位置， 然后再用同样的方法递归地排序划分的两部分。 $arr &#x3D; [1, 43, 54, 62, 2...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"}],"toc":"","author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}},"mapped":true,"prev_post":{"title":"冒泡排序","uid":"1d3d34015824551bc1c5fbed5c50786a","slug":"07_LeetCode/冒泡排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/冒泡排序.json","keywords":null,"cover":null,"text":"在要排序的一组数中，对当前还未排好的序列， 从前往后对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。 即，每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。 $arr &#x3D; [1, 43, 54, 62, 21, 66, 32, 78, ...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"冒泡排序","slug":"冒泡排序","count":1,"path":"api/tags/冒泡排序.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},"next_post":{"title":"插入排序","uid":"f2ea62009b2a302d5e2076e5efd27611","slug":"07_LeetCode/插入排序","date":"2020-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.020Z","comments":true,"path":"api/articles/07_LeetCode/插入排序.json","keywords":null,"cover":null,"text":"在要排序的一组数中，假设前面的数已经是排好顺序的， 现在要把第n个数插到前面的有序数中，使得这n个数也是排好顺序的。 如此反复循环，直到全部排好顺序。 $arr &#x3D; [1, 43, 54, 62, 21, 66, 32, 78, 36, 76, 39]; functio...","link":"","photos":[],"count_time":{"symbolsCount":769,"symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"插入排序","slug":"插入排序","count":1,"path":"api/tags/插入排序.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}}}