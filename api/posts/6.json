{"total":100,"pageSize":12,"pageCount":9,"data":[{"title":"Redis缓存击穿","uid":"406c5d5fe6c6fd475c83074ee629ccea","slug":"02_Redis/缓存击穿","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存击穿.json","cover":null,"text":"什么是缓存击穿？ 其实跟缓存雪崩有点类似，缓存雪崩是大规模的key失效，而缓存击穿是一个热点的Key，有大并发集中对其进行访问，突然间这个Key失效了，导致大并发全部打在数据库上，导致数据库压力剧增。这种现象就叫做缓存击穿。 分析： 关键在于某个热点的key失效了，导致大并发集中...","link":"","photos":[],"count_time":{"symbolsCount":321,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"Redis缓存穿透","uid":"a0f45cd6c322a6e03b4044aafd033b7f","slug":"02_Redis/缓存穿透","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存穿透.json","cover":[],"text":"我们使用Redis大部分情况都是通过Key查询对应的值，假如发送的请求传进来的key是不存在Redis中的，那么就查不到缓存，查不到缓存就会去数据库查询。假如有大量这样的请求，这些请求像“穿透”了缓存一样直接打在数据库上，这种现象就叫做缓存穿透。 分析： 关键在于在Redis查不...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"Redis缓存雪崩","uid":"8c8ef61b68dd77d38b57f5cea2b182a9","slug":"02_Redis/缓存雪崩","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.010Z","comments":true,"path":"api/articles/02_Redis/缓存雪崩.json","cover":[],"text":"当某一个时刻出现大规模的缓存失效的情况，那么就会导致大量的请求直接打在数据库上面，导致数据库压力巨大，如果在高并发的情况下，可能瞬间就会导致数据库宕机。这时候如果运维马上又重启数据库，马上又会有新的流量把数据库打死。这就是缓存雪崩。 分析： 造成缓存雪崩的关键在于在同一时间大规模...","link":"","photos":[],"count_time":{"symbolsCount":468,"symbolsTime":"1 mins."},"categories":[{"name":"Redis","slug":"Redis","count":10,"path":"api/categories/Redis.json"}],"tags":[{"name":"redis","slug":"redis","count":10,"path":"api/tags/redis.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"Kafka","uid":"e1579ed1c931165c644c9ec68da7a87a","slug":"04_MQ/Kafka","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.014Z","comments":true,"path":"api/articles/04_MQ/Kafka.json","cover":[],"text":"使用kafka可以对系统 ​ 解耦、 ​ 流量削峰、 ​ 缓冲 可以实现系统间的异步通信等。 在活动追踪、消息传递、度量指标、日志记录和流式处理等场景中非常适合使用kafka。 组件 释义 备注 Broker 服务代理节点 其实就是一个kafka实例或服务节点，多个broker构...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"MQ","slug":"MQ","count":3,"path":"api/categories/MQ.json"}],"tags":[{"name":"Kafka","slug":"Kafka","count":1,"path":"api/tags/Kafka.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"MQ面试经","uid":"c07280ed37e56a831a850ef11c3453d2","slug":"04_MQ/MQ","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/04_MQ/MQ.json","cover":[],"text":"为什么使用消息队列？消息队列的优点和缺点？kafka、activemq、rabbitmq、rocketmq都有什么优缺点？ 面试官角度分析： （1）你知不知道你们系统里为什么要用消息队列这个东西？ （2）既然用了消息队列这个东西，你知不知道用了有什么好处？ （3）既然你用了MQ，...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"MQ","slug":"MQ","count":3,"path":"api/categories/MQ.json"}],"tags":[{"name":"MQ","slug":"MQ","count":1,"path":"api/tags/MQ.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"MQ","uid":"f8ef4e10e9f952ff4ed3590ecc45cea3","slug":"04_MQ/众多MQ区别","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/04_MQ/众多MQ区别.json","cover":null,"text":"转自 特性 ActiveMQ RabbitMQ RocketMQ Kafka 单机吞吐量 万级，比 RocketMQ、Kafka 低一个数量级 同 ActiveMQ 10 万级，支撑高吞吐 10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景 topic ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"MQ","slug":"MQ","count":3,"path":"api/categories/MQ.json"}],"tags":[{"name":"message","slug":"message","count":1,"path":"api/tags/message.json"},{"name":"queue","slug":"queue","count":1,"path":"api/tags/queue.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"Opcache","uid":"85c12a31d0c9184040aa4bab328e79c5","slug":"05_PHP/Opcache","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/05_PHP/Opcache.json","cover":null,"text":"Opcache - 扩展 ","link":"","photos":[],"count_time":{"symbolsCount":13,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"},{"name":"扩展","slug":"扩展","count":1,"path":"api/tags/扩展.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"PHP5与PHP7","uid":"8ad7c02366ba3448c825d7359d268365","slug":"05_PHP/PHP5与PHP7","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.015Z","comments":true,"path":"api/articles/05_PHP/PHP5与PHP7.json","cover":null,"text":" 改进的性能 - 将 PHPNG 代码合并到 PHP7 中，速度是 PHP 5 的两倍。 降低内存消耗 - 优化的 PHP 7 使用较少的资源。 标量类型声明 - 现在可以强制执行参数和返回类型。 一致的 64 位支持 - 对 64 位体系结构机器的一致支持。 改进了异常层次 -...","link":"","photos":[],"count_time":{"symbolsCount":354,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"GC - 垃圾回收机制","uid":"6b6fc9dba74c7910bcbe51ca5306e95c","slug":"05_PHP/垃圾回收机制","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/垃圾回收机制.json","cover":null,"text":"GC 垃圾回收机制 自动进行内存管理，清除不需要的对象，使用了引用计数GC机制。 ​ 每个对象都内含一个引用计数器，连接到对象，计数器+1； ​ 当离开生存扣减或者设置为NULL时，计数器-1； 当引用计数器为零时，PHP将释放其所占的内存空间。 ","link":"","photos":[],"count_time":{"symbolsCount":124,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"PHP安全","uid":"a362973c4b5c327fa654d2d9e8bdc0a8","slug":"05_PHP/安全问题","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/安全问题.json","cover":null,"text":"永远不要相信用户传递的任何数据 安全问题 释义 防范 SQL注入 XSS跨站脚本攻击 XSRF跨站请求伪造攻击 不充分的密码哈希 生产中打印错误日志 登录未限制 中间人攻击 命令注入 LFI XXE ","link":"","photos":[],"count_time":{"symbolsCount":146,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"},{"name":"安全","slug":"安全","count":1,"path":"api/tags/安全.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"后期静态变量绑定","uid":"38f689e6465d7c7efe9e7da9f157dd4e","slug":"05_PHP/后期静态绑定","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/后期静态绑定.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"PHP","slug":"PHP","count":11,"path":"api/tags/PHP.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}},{"title":"PHP的工作原理","uid":"75fb5b6b2923996a93e804973515b8ea","slug":"05_PHP/工作原理","date":"2019-03-20T07:05:07.000Z","updated":"2022-10-05T13:38:02.017Z","comments":true,"path":"api/articles/05_PHP/工作原理.json","cover":null,"text":" 概述 CGI，通用网关接口， 用于WEB服务器和应用程序间的交互，定义输入输出规范， 用户的请求通过WEB服务器转发给FastCGI进程， FastCGI进程再调用应用程序进行处理，如php解析器，应用程序的处理结果如html返回给FastCGI，FastCGI返回给Nginx...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"PHP","slug":"PHP","count":24,"path":"api/categories/PHP.json"}],"tags":[{"name":"工作原理","slug":"工作原理","count":1,"path":"api/tags/工作原理.json"}],"author":{"name":"Michael","slug":"michael","avatar":"https://cdn.jsdelivr.net/gh/mikeah2011/oss@main/uPic/blog_logo.jpeg","link":"/","description":"知我所能者，我所能者，尽善尽美；<br/> <br/> 知我所不能者，我所不能者，虚怀若谷。","socials":{"github":"https://github.com/mikeah2011","twitter":"","stackoverflow":"https://stackoverflow.com/users/11422545/mikeah2011","wechat":"","qq":"","weibo":"https://weibo.com/u/2383628417","zhihu":"https://www.zhihu.com/people/michael-12-18","csdn":"https://blog.csdn.net/weixin_41273562","juejin":"https://juejin.cn/user/4389711549044269","customs":{}}}}]}